[{"path":"https://juliengamartin.github.io/pedtricks/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pedtricks authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/TODO.html","id":null,"dir":"","previous_headings":"","what":"TO DO list","title":"TO DO list","text":"document fix plot function ped_stats better documentation overall clean linter warnings convert plots plot.ped_stats ggplot format add ORCID us add functions plot relatedness matrix","code":""},{"path":"https://juliengamartin.github.io/pedtricks/TODO.html","id":"ggpedigreer","dir":"","previous_headings":"","what":"ggpedigree.R","title":"TO DO list","text":"replace draw_ped ggpedigree - make sure functionality matches optimize ggpedigree x-coordinates (similar PedView programme) add sex information (took temporarily) add data checks e.g. vectors length etc.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/TODO.html","id":"nadiv-integration","dir":"","previous_headings":"","what":"nadiv integration","title":"TO DO list","text":"since already dependent nadiv remove redundant functions prune -> prunePed orderPed -> prepPed convert_ped -> numPed fix_ped -> prepPed","code":""},{"path":"https://juliengamartin.github.io/pedtricks/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julien Martin. Author, maintainer. Matthew Wolak. Author. Susan Johnston. Author. Michael Morrissey. Author.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martin J, Wolak M, Johnston S, Morrissey M (2024). pedtricks: Visualize, Summarize Simulate Data Pedigrees. R package version 0.4.3, https://juliengamartin.github.io/pedtricks/.","code":"@Manual{,   title = {pedtricks: Visualize, Summarize and Simulate Data from Pedigrees},   author = {Julien Martin and Matthew Wolak and Susan Johnston and Michael Morrissey},   year = {2024},   note = {R package version 0.4.3},   url = {https://juliengamartin.github.io/pedtricks/}, }"},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"pedtricks-package","dir":"","previous_headings":"","what":"Visualize, Summarize and Simulate Data from Pedigrees","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"Functions sensitivity power analysis, calculating statistics describing pedigrees wild populations, visualizing pedigrees. package essentially reboot now archived pedantics package. took pedantics package, removed dependencies archived packages (MasterBayes), renamed functions removed 2 (fpederr() rpederr()).","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"Install ","code":"remotes::install_github(   \"JulienGAMartin/pedtricks\" )"},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"changes-from-pedantics","dir":"","previous_headings":"","what":"Changes from pedantics","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"see News page pedtricks website list changes","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"speed","dir":"","previous_headings":"Changes from pedantics","what":"speed","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"Code optimized run faster (200 times faster example pedigree ped_stats >160s <1s)","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"defunct-functions","dir":"","previous_headings":"Changes from pedantics","what":"Defunct functions","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"rpederr() fpederr() removed package. questions rates pedigree error typically encountered, effects inference elementary QG parameters basically settled (Charmantier & Réale 2005, Morrissey et al. 2007, Firth et al. 2015, Bourret & Garant 2017), outstanding questions plausibly supported functions straightforward modifications thereof.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"functions-structure-changes","dir":"","previous_headings":"Changes from pedantics","what":"functions structure changes","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"pedigreeStats() pedStatSummary() replaced ped_stats() summary() plot() methods simplify workflow allow get plots without running statistics time makePedigreeFactor() makePedigreeNumeric() combined convert_ped() convert pedigree numeric factor","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"functions-renamed","dir":"","previous_headings":"Changes from pedantics","what":"functions renamed","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"fixPedigree() now fix_ped() genomesim(), microsim() phensim() renamed genome_sim(), micro_sim() phen_sim()","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"new-functions","dir":"","previous_headings":"Changes from pedantics","what":"new functions","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"ggpedigreedraw pedigrees ggplot style draw_pedA graphical representation relatedness matrix","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"future-for-100","dir":"","previous_headings":"","what":"future for 1.0.0","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"replace drawPedigree ggpedigree reimplement plot methods ped_stats using ggplot add plotting function relatedness matrices …","code":""},{"path":"https://juliengamartin.github.io/pedtricks/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Visualize, Summarize and Simulate Data from Pedigrees","text":"Bourret, ., D. Garant. 2017. assessment reliability quantitative genetics estimates study systems high rate extra pair paternity low recruitment. Heredity 118: 229-38. Charmantier, ., D. Réale. 2005. misassigned paternities affect estimation heritability wild? Molecular Ecology 14: 2839-50 Firth, J.. J.D. Hadfield, .W. Santure, J. Slate B.C. Sheldon. 2015. influence non-random extra pair paternity heritability estimates derived wild pedigrees. Evolution 69: 1336-44. Morrissey, M.B., .J. Wilson, J.M. Pemberton, M.M. Ferguson. 2007. framework power sensitivity analysis quantitative genetic studies natural populations, case study Soay sheep (Ovis aries). Journal Evolutionary Biology 20: 2309-21.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/WarblerG.html","id":null,"dir":"Reference","previous_headings":"","what":"Seychelles Warbler Genotypes — WarblerG","title":"Seychelles Warbler Genotypes — WarblerG","text":"Genotype data collected David Richardson Cousin Island 1999.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/WarblerG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seychelles Warbler Genotypes — WarblerG","text":"","code":"WarblerG"},{"path":"https://juliengamartin.github.io/pedtricks/reference/WarblerG.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Seychelles Warbler Genotypes — WarblerG","text":"object class data.frame 307 rows 29 columns.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/WarblerG.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seychelles Warbler Genotypes — WarblerG","text":"Richardson et.al. (2001) Molecular Ecology 10 2263-2273 Hadfield J.D. et al (2006) Molecular Ecology 15 3715-31","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/convert_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"internal pedtricks modules require pedigrees specified numerical values, including numerical values missing data. function provides conversion numeric also back factors needed","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/convert_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"","code":"convert_ped(type = \"numeric\", id, sire, dam, missingVal = NA, key = NULL)"},{"path":"https://juliengamartin.github.io/pedtricks/reference/convert_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"type define convert pedigree \"numeric\" \"factor\" id Individual identifiers - pass using .character() sire Sire codes - pass using .character() dam Dam codes - pass using .character() missingVal indicator substituted missing values key dataframe, produced convert_ped, specifying factor codes numeric values id, sire, dam","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/convert_ped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"numericPedigree factor pedigree numeric form idKey key facilitate conversion back original identifiers","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/convert_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"","code":"pedigree <- as.data.frame(matrix(c(   \"m1\",   NA,     NA,   \"m2\",   NA,     NA,   \"m3\",   NA,     NA,   \"d4\",   NA,     NA,   \"d5\",   NA,     NA,   \"o6\",   \"m1\",   \"d4\",   \"o7\",   \"m1\",   \"d4\",   \"o8\",   \"m1\",   \"d4\",   \"o9\",   \"m1\",   \"d4\",   \"o10\",  \"m2\",   \"d5\",   \"o11\",  \"m2\",   \"d5\",   \"o12\",  \"m2\",   \"d5\",   \"o13\",  \"m2\",   \"d5\",   \"o14\",  \"m3\",   \"d5\",   \"o15\",  \"m3\",   \"d5\",   \"o16\",  \"m3\",   \"d5\",   \"o17\",  \"m3\",   \"d5\" ), 17, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x])  ## make the test pedigree numeric with NAs denoted by -1 convert_ped(   type = \"numeric\",   id = as.character(pedigree[, 1]),   dam = as.character(pedigree[, 2]),   sire = as.character(pedigree[, 3]),   missingVal = -1 ) #> $numericPedigree #>    id sire dam #> 1   3   -1  -1 #> 2   4   -1  -1 #> 3   5   -1  -1 #> 4   1   -1  -1 #> 5   2   -1  -1 #> 6  14    1   3 #> 7  15    1   3 #> 8  16    1   3 #> 9  17    1   3 #> 10  6    2   4 #> 11  7    2   4 #> 12  8    2   4 #> 13  9    2   4 #> 14 10    2   5 #> 15 11    2   5 #> 16 12    2   5 #> 17 13    2   5 #>  #> $idKey #>    pn   pf #> 1   3   m1 #> 2   4   m2 #> 3   5   m3 #> 4   1   d4 #> 5   2   d5 #> 6  14   o6 #> 7  15   o7 #> 8  16   o8 #> 9  17   o9 #> 10  6  o10 #> 11  7  o11 #> 12  8  o12 #> 13  9  o13 #> 14 10  o14 #> 15 11  o15 #> 16 12  o16 #> 17 13  o17 #> 18 -1 <NA> #>"},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a graphical representation of a pedigree — draw_ped","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Plots pedigree, options specific considerations pedigrees used quantitative genetic inference natural populations.  Pedigrees containing individuals informative respect (genetic) variation arbitrary trait can plotted, potentially overlain complete pedigree. Functions also exist plot various types pedigree links associated focal individuals.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a graphical representation of a pedigree — draw_ped","text":"","code":"draw_ped(   Ped,   cohorts = NULL,   sex = NULL,   dat = NULL,   dots = \"n\",   plotfull = \"y\",   writeCohortLabels = \"n\",   links = \"all\",   sexInd = c(0, 1),   dotSize = 0.001,   dataDots = \"n\",   dataDots.cex = 2,   cohortLabs.cex = 1,   retain = \"informative\",   focal = NULL,   sexColours = c(\"red\", \"blue\"),   ... )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Ped ordered pedigree 3 columns: id, dam, sire cohorts optional numeric vector length pedigree designating, example cohort affinities birth years sex optional numeric vector length pedigree containing sexes (may unknown) individuals entries pedigree.  Defaults (modifiable sexInd) 0=male 1=female dat optional vector data frame containing indicators data availability.  dat contains ones zeros, individual entry one considered data records.  data contains values ones zeros, individuals pedigree rows data contain least one available record, .e., one data record NA, treated data. dots 'y', dot printed representing individual pedigree.  sexes available, dots colour coded sex. plotfull used dat supplied.  'y' (default), individuals pedigree uninformative respect available data pedigree links plotted gray. writeCohortLabels used cohorts used.  plot cohort values left hand side pedigree image. links Default '', values 'mums' print maternal pedigree links 'dads' print paternal pedigree links. sexInd used sex supplied vector sex specifiers differs default. dotSize Set dot size bigger smaller dataDots print dots dots denoting individuals, denoting individuals available data indicated dat. dataDots.cex controls size dataDots relative dots. cohortLabs.cex controls size cohort labels. retain pedigree links informative relative phenotypic data availability plotted, controls whether pruned pedigree based phenotypic data plotted (set \"pruned\"), whether strictly informative pedigree links plotted (default) focal optional list containing id individual kinds relatives focal individual plot pedigree links.  Available types 'offspring','descendants','parents',,ancestors', 'kin'. sexColours colours used draw points lines associated males females. ... Additional graphical parameters.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a graphical representation of a pedigree — draw_ped","text":"output plot pedigree, return value","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Michael Morrissey michael.morrissey@st-andrews.ac.uk","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a graphical representation of a pedigree — draw_ped","text":"","code":"data(gryphons) pedigree <- fix_ped(gryphons[, 1:3])  ## draw the gryphon pedigree by pedigree depth draw_ped(pedigree)  ## draw the gryphon pedigree by cohort draw_ped(pedigree,   cohorts = gryphons$cohort, writeCohortLabels = \"y\",   cohortLabs.cex = 1 )  ## draw the gryphon pedigree by cohort with only maternal links draw_ped(pedigree, cohorts = gryphons$cohort, links = \"mums\")  ## draw the gryphon pedigree by cohort with colour only for those ## indiduals that are informative relative to the quantitative ## genetics of a hypothetical trait only measured for individuals ## in the last two cohorts, emphasize the phenotyped individuals ## with large black dots, and all other individuals with dots ## colour coded by sex: dataAvailability <- (gryphons$cohort >= (max(gryphons$cohort) - 1)) + 0  draw_ped(pedigree,   cohorts = gryphons$cohort, sex = gryphons$sex,   dots = \"y\", dat = dataAvailability, writeCohortLabels = \"y\", dataDots = \"y\" ) #> Individuals in full pedigree: 4918  #> Individuals in informative pedigree subset: 721"},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"Creates object needed plot pedigree's numerator relatedness matrix given different choices ordering. resulting image pedigree size n can visualized n x n grid colored squares based values numerator relatedness matrix.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"","code":"draw_pedA(   pedigree,   order = c(\"original\", \"generation\", \"user\"),   grp = NULL,   ... )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"pedigree data.frame pedigree 3 columns: id, dam, sire order character expression pedigree ordered visualization. See Details. grp character expression column name pedigree indicating order pedigree visualization. ... Additional plotting arguments passed image.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"list class “trellis”.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"mew0099@auburn.edu","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/draw_pedA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a graphical representation of the relatedness matrix of a pedigree — draw_pedA","text":"","code":"data(gryphons) pedigree <- fix_ped(gryphons[, 1:3])  ## draw the gryphon pedigree draw_pedA(pedigree, order = \"original\")   ## draw the gryphon pedigree by function assigned generation (Agen <- draw_pedA(pedigree, order = \"generation\"))    # \\donttest{ ## draw the gryphon pedigree by cohort in the dataset ## add cohort back from original data pedigree$cohort <- NA pedigree$cohort[match(gryphons$id, pedigree[, 1])] <- gryphons$cohort (Achrt <- draw_pedA(pedigree, order = \"user\", grp = \"cohort\"))   ## show two images of the same pedigree in different orders ### (i.e., plotting multiple trellis objects in the same figure) plot(Agen,   position = c(xmin = 0, ymin = 0, xmax = 0.45, ymax = 1),   more = TRUE ) plot(Achrt, position = c(xmin = 0.55, ymin = 0, xmax = 1, ymax = 1))  # }"},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":null,"dir":"Reference","previous_headings":"","what":"Allele Frequencies — extractA","title":"Allele Frequencies — extractA","text":"Extracts allele frequencies genotype data","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allele Frequencies — extractA","text":"","code":"extractA(G, marker.type = \"MSW\")"},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allele Frequencies — extractA","text":"G data frame list genotype objects marker.type \"MSW\" \"MSC\" co-dominant markers Wang's (2004) model genotyping error CERVUS's model genotyping error (Marshall, 1998) \"AFLP\" dominant markers.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allele Frequencies — extractA","text":"list allele frequencies loci","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Allele Frequencies — extractA","text":"Jarrod Hadfield j.hadfield@ed.ac.uk","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/extractA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allele Frequencies — extractA","text":"","code":"# \\donttest{ data(WarblerG)  A <- extractA(WarblerG) A[[1]] #>        272        279        284  #> 0.50822368 0.45230263 0.03947368  # }"},{"path":"https://juliengamartin.github.io/pedtricks/reference/fix_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","text":"Manipulating pedigrees prepare requirements subsequent analyses Prepares pedigree conform requirements many softwares used quantitative genetic analysis, well many functions pedtricks.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/fix_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","text":"","code":"fix_ped(ped, dat = NULL)"},{"path":"https://juliengamartin.github.io/pedtricks/reference/fix_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","text":"ped ordered pedigree 3 columns: id, dam, sire dat optional data frame, length pedigree","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/fix_ped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","text":"Returns pedigree individuals exist dam sire columns represented record lines, occurring records first offspring.  data supplied, fix_ped return dataframe, first three columns 'fixed' pedigree, following columns contain appropriately reordered data.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/fix_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedtricks. — fix_ped","text":"","code":"##  a valid pedigree, i.e., no loops, no bisexuality, etc., ## but where not all parents have a record line, and where ## parents do not necessarily occur before their offspring: pedigree <- as.data.frame(matrix(c(   10, 1, 2,   11, 1, 2,   12, 1, 3,   13, 1, 3,   14, 4, 5,   15, 6, 7,   4, NA, NA,   5, NA, NA,   6, NA, NA,   7, NA, NA ), 10, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") pedigree #>    id dam sire #> 1  10   1    2 #> 2  11   1    2 #> 3  12   1    3 #> 4  13   1    3 #> 5  14   4    5 #> 6  15   6    7 #> 7   4  NA   NA #> 8   5  NA   NA #> 9   6  NA   NA #> 10  7  NA   NA fixed_pedigree <- fix_ped(ped = pedigree) fixed_pedigree #>    id  dam sire #> 7   4 <NA> <NA> #> 8   5 <NA> <NA> #> 9   6 <NA> <NA> #> 10  7 <NA> <NA> #> 31  1 <NA> <NA> #> 61  2 <NA> <NA> #> 63  3 <NA> <NA> #> 1  10    1    2 #> 2  11    1    2 #> 3  12    1    3 #> 4  13    1    3 #> 5  14    4    5 #> 6  15    6    7"},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to simulate QTL and/or SNP data. — genome_sim","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Simulates chromosome arbitrary length arbitrary numbers, types, spacings genetic loci arbitrary pedigrees.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"","code":"genome_sim(   pedigree,   founders = NULL,   positions = NULL,   initHe = NULL,   mutationType = NULL,   mutationRate = NULL,   phenotyped = NULL,   founderHaplotypes = NULL,   genotyped = NULL,   returnG = \"n\",   initFreqs = NULL )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"pedigree pedigree founders vector indicator variables denoting founder status (1=founder, 0=non-founder) positions Genome locations cM markers initHe Initial levels expected heterozygosity mutationType vector locus types - see details mutationRate vector mutation rates phenotyped vector IDs individuals return phenotypic data founderHaplotypes matrix dataframe containing founder haplotypes genotyped vector IDs individuals return genotypic data returnG 'y' genotypic data loci (including cIAM loci) returned. initFreqs list allele frequencies loci.  initFreqs specified, override information initHe.  extractA package MasterBayes can used obtain obtain initFreqs form sample genotypes.  cIAM loci, allele names initFreqs allelic substitution effects.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Phenotypes vector phenotypes.  Calculated sum allelic effects.  Scaling currently left done post-hoc. MarkerData vector marker genotypes, .e. alleles loci except designated `cIAM'","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Valid mutation types Micro', Dom', dIAM' cIAM', microsatellite, dominant (AFLP), discrete infinite alleles mutation model loci (SNPs), continuous infinite alleles mutation model loci (polymorphisms effecting phenotypic variation).  cIAM loci mutational allelic substitution effects taken drawn normal distribution mean 0 variance 1.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/reference/genome_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"","code":"testData <- as.data.frame(matrix(   c(     1,      NA,     NA,     1,      1,      1,      2,      2,     2,      NA,     NA,     1,      1,      1,      2,      2,     3,      NA,     NA,     1,      1,      1,      2,      2,     4,      NA,     NA,     1,      0,      1,      2,      2,     5,      NA,     NA,     1,      0,      1,      2,      2,     6,      1,      4,      0,      -1,     2,      3,      3,     7,      1,      4,      0,      -1,     2,      3,      3,     8,      1,      4,      0,      -1,     2,      3,      3,     9,      1,      4,      0,      -1,     2,      3,      3,     10,     2,      5,      0,      -1,     2,      3,      3,     11,     2,      5,      0,      -1,     2,      3,      3,     12,     2,      5,      0,      -1,     2,      3,      3,     13,     2,      5,      0,      -1,     2,      3,      3,     14,     3,      5,      0,      -1,     2,      3,      3,     15,     3,      5,      0,      -1,     2,      3,      3,     16,     3,      5,      0,      -1,     2,      3,      3,     17,     3,      5,      0,      -1,     2,      3,      3   ),   17, 8,   byrow = TRUE ))  names(testData) <- c(   \"id\", \"dam\", \"sire\", \"founder\", \"sex\",   \"cohort\", \"first\", \"last\" ) pedigree <- as.data.frame(cbind(   testData$id, testData$dam,   testData$sire )) for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x]) names(pedigree) <- c(\"id\", \"dam\", \"sire\") pedigree #>    id  dam sire #> 1   1 <NA> <NA> #> 2   2 <NA> <NA> #> 3   3 <NA> <NA> #> 4   4 <NA> <NA> #> 5   5 <NA> <NA> #> 6   6    1    4 #> 7   7    1    4 #> 8   8    1    4 #> 9   9    1    4 #> 10 10    2    5 #> 11 11    2    5 #> 12 12    2    5 #> 13 13    2    5 #> 14 14    3    5 #> 15 15    3    5 #> 16 16    3    5 #> 17 17    3    5  ## make up some microsatellite and gene allele frquencies: sampleGenotypes <- as.data.frame(matrix(c(   1, 2, -1.32, 0.21, 2, 1, 0.21, 0.21 ), 2, 4, byrow = TRUE)) testFreqs <- extractA(sampleGenotypes)  ## note that alleles at the gene locus are given as their ## allelic substitution effects: testFreqs #> $V2 #>   2   1  #> 0.5 0.5  #>  #> $V4 #>  0.21 -1.32  #>  0.75  0.25  #>   ## simulate data for these indivdiuals based on a single QTL ## with two equally alleles with balanced frequencies in the ## founders, linked (2 cM) to a highly  polymorphic microsatellite: genome_sim(   pedigree = pedigree, founders = testData$founder, positions = c(0, 2),   mutationType = c(\"Micro\", \"cIAM\"), mutationRate = c(0, 0),   initFreqs = testFreqs, returnG = \"y\" ) #> Processing pedigree...  #> 0%                     50%                     100%  #> |                       |                       |  #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #> - #>  #>  ...done.  #>  #>  Calculating phenotypes... #> done.  #>  #>  Tabulating marker genotypes... #> done.  #> $Phenotypes #>    V1    V2 #> 1   1 -1.11 #> 2   2  0.42 #> 3   3 -1.11 #> 4   4  0.42 #> 5   5 -1.11 #> 6   6 -1.11 #> 7   7  0.42 #> 8   8  0.42 #> 9   9  0.42 #> 10 10  0.42 #> 11 11  0.42 #> 12 12 -1.11 #> 13 13 -1.11 #> 14 14  0.42 #> 15 15 -1.11 #> 16 16 -2.64 #> 17 17 -1.11 #>  #> $MarkerData #> [1] doubleids markers   #> <0 rows> (or 0-length row.names) #>  #> $genomes #>    doubleids V2    V3 #> 1          1  2 -1.32 #> 2          1  1  0.21 #> 3          2  2  0.21 #> 4          2  2  0.21 #> 5          3  1 -1.32 #> 6          3  1  0.21 #> 7          4  2  0.21 #> 8          4  2  0.21 #> 9          5  2  0.21 #> 10         5  2 -1.32 #> 11         6  2 -1.32 #> 12         6  2  0.21 #> 13         7  2  0.21 #> 14         7  2  0.21 #> 15         8  1  0.21 #> 16         8  2  0.21 #> 17         9  1  0.21 #> 18         9  2  0.21 #> 19        10  2  0.21 #> 20        10  2  0.21 #> 21        11  2  0.21 #> 22        11  2  0.21 #> 23        12  2  0.21 #> 24        12  2 -1.32 #> 25        13  2  0.21 #> 26        13  2 -1.32 #> 27        14  1  0.21 #> 28        14  2  0.21 #> 29        15  1  0.21 #> 30        15  2 -1.32 #> 31        16  1 -1.32 #> 32        16  2 -1.32 #> 33        17  1  0.21 #> 34        17  2 -1.32 #>  ## since we specified returnG='y', we can check that ## the phenotypes add up to the ## allelic substitution effects for the second locus."},{"path":"https://juliengamartin.github.io/pedtricks/reference/ggpedigree.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","title":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","text":"function plots simple complex pedigrees, options specific types pedigrees used quantitative genetic inference natural populations. function flexible missing parents can customized visualise specific cohorts, sexes, /phenotype availability. Pedigree layout optimized using Sugiyama algorithm. simpler pedigrees, visualisation may improved specifying spread_x_coordinates = FALSE.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ggpedigree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","text":"","code":"ggpedigree(   .data,   ids,   mothers,   fathers,   cohort,   sex,   pheno,   sex_code = NULL,   id_labels = FALSE,   remove_singletons = TRUE,   plot_unknown_cohort = FALSE,   spread_x_coordinates = TRUE,   print_cohort_labels = TRUE,   return_plot_tables = FALSE,   line_col_mother = \"#E41A1C\",   line_col_father = \"#377EB8\",   line_col_no_pheno = \"#aaaaaa\",   line_alpha = 0.3,   point_size = 1,   point_colour = \"black\",   point_alpha = 1 )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/ggpedigree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","text":".data data frame object pedigree information ids column .data individual identifiers mothers column .data mothers corresponding ids. Missing values 0 NA. fathers column .data fathers corresponding ids. Missing values 0 NA. cohort integer. Default NULL. optional column .data assigning cohort id. NULL, kinship2::kindepth used assign cohorts ids. sex integer character. Default NULL. optional column .data assigning sex id. using option, sex_code must specified. values matching values sex_code treated unknown sex. pheno integer character. Default NULL. optional column .data assigning phenotype id. Links originating parents NA values argument plotted grey line, unless otherwise specified line_col_no_pheno. sex_code Default NULL. vector length 2, indicating value used sex females males respectively. Females plotted circles, males squares, unknown values triangles. id_labels logical. Default FALSE. Print ids pedigree plot. remove_singletons logical. Default TRUE. Remove ids relatives .e., offspring parents assigned. plot_unknown_cohort logical. Default FALSE. Plots ids unknown cohorts. plotted \"Unknown\" cohort top pedigree. aware mothers fathers individuals plotted . spread_x_coordinates logical. Default TRUE. Evenly spreads x-axis (horizontal) distribution points within cohort. FALSE, plot direct outcome igraph::layout_with_sugiyama; FALSE option recommended small pedigrees /less connected pedigrees. print_cohort_labels logical. Default TRUE. Prints cohort levels left hand side plot. return_plot_tables logical. Default FALSE. Returns object line point data used plot, plot generated line_col_mother Default = \"#E41A1C\". Line colour maternal links. line_col_father Default = \"#377EB8\". Line colour paternal links. line_col_no_pheno Default = \"#aaaaaa\". Line colour parents NA values pheno. line_alpha Default = 0.3. Line alpha (transparency) value maternal paternal links. point_size Default = 1. Point size ids. point_colour Default = \"black\". Point colour ids. point_alpha Default = 1. Point alpha ids.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ggpedigree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","text":"output ggplot object list tables return_plot_tables = TRUE","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ggpedigree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggpedigree: Plotting tool for simple and complex pedigrees. — ggpedigree","text":"","code":"data(gryphons) pedigree <- fix_ped(gryphons[, 1:3])  ## draw the gryphon pedigree by pedigree depth ggpedigree(pedigree) #> Warning: the first 3 columns were used for id, dam and sire identity, please specify if not correct or to remove the warning   # \\donttest{ # specifying the column names for id, mother and father ggpedigree(pedigree, id, dam, sire)   # with cohort and sex ggpedigree(gryphons, cohort = cohort, sex = sex, sex_code = c(1, 0)) #> Warning: the first 3 columns were used for id, dam and sire identity, please specify if not correct or to remove the warning   #' with cohort, sex, and pheno gryphons$pheno <- 1 gryphons$pheno[sample(length(gryphons$pheno), 1000)] <- NA ggpedigree(gryphons, cohort = cohort, sex = sex, sex_code = c(1, 0), pheno = pheno) #> Warning: the first 3 columns were used for id, dam and sire identity, please specify if not correct or to remove the warning  # }"},{"path":"https://juliengamartin.github.io/pedtricks/reference/gryphons.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset for pedtricks examples and tutorial — gryphons","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"contains pedigree life history data fictional population.  data relevant power sensitivity analyses quantitative genetic studies natural populations.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/gryphons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"","code":"gryphons"},{"path":"https://juliengamartin.github.io/pedtricks/reference/gryphons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"object class data.frame 4918 rows 9 columns.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/gryphons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"id dam sire sex cohort fatherErrorProb fatherSampledProb firstReproCohort lastReproCohort ","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates microsatellite data across a pedigree. — micro_sim","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"Uses pedigree parents identified non-founding individuals simulates microsatellite genotypes","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"","code":"micro_sim(   pedigree,   genFreqs = NULL,   genotypesSample = NULL,   knownGenotypes = NULL,   records = NULL,   eRate1 = 0,   eRate2 = 0,   eRate3 = 0 )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"pedigree pedigree genFreqs (optional) list allele frequencies, can produced extractA genotypesSample (required genFreqs supplied) sample genotypes estimate population allele frequencies knownGenotypes (yet implemented) data frame genotypes (potentially subset) founder individuals records Record availability, see details. eRate1 rate genotypic substitution errors, .e., true genotype given locus replaced pair alleles selected random based population allele frequencies eRate2 rate allelic substitution errors, .e. allele erroneously replaced given locus allele chosen random based population allele frequencies eRate3 rate large allele dropouts, simulated setting value larger allele locus value smaller allele","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"trueGenotypes data frame true genotypes observedGenotypes data frame plausible observed genotypes, given specified patterns missingness errors.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"Error rates data availability rates can specified either (1) single values applied individuals loci, (2) vector length number loci, representing locus-specific rates applied uniformly individuals, (3) data frames rows individual columns locus.  third option, observed patterns data availability can simulated supplying 0s 1s missing available individual genotypes, respectively.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/reference/micro_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"","code":"pedigree <- as.data.frame(matrix(c(   \"m1\",   NA,     NA,   \"m2\",   NA,     NA,   \"m3\",   NA,     NA,   \"d4\",   NA,     NA,   \"d5\",   NA,     NA,   \"o6\",   \"m1\",   \"d4\",   \"o7\",   \"m1\",   \"d4\",   \"o8\",   \"m1\",   \"d4\",   \"o9\",   \"m1\",   \"d4\",   \"o10\",  \"m2\",   \"d5\",   \"o11\",  \"m2\",   \"d5\",   \"o12\",  \"m2\",   \"d5\",   \"o13\",  \"m2\",   \"d5\",   \"o14\",  \"m3\",   \"d5\",   \"o15\",  \"m3\",   \"d5\",   \"o16\",  \"m3\",   \"d5\",   \"o17\",  \"m3\",   \"d5\" ), 17, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x])  ## some sample genotypes, very simple, two markers with He = 0.5 sampleGenotypes <- as.data.frame(matrix(c(   1, 2, 1, 2, 2, 1, 2, 1 ), 2, 4, byrow = TRUE)) ## locus names names(sampleGenotypes) <- c(\"loc1a\", \"loc1b\", \"loc2a\", \"loc2b\")  ## simulate some genotypes micro_sim(pedigree = pedigree, genotypesSample = sampleGenotypes) #> $trueGenotypes #>     loc1b loc1b_b loc2b loc2b_b #> m1      2       2     1       1 #> m2      1       2     1       2 #> m3      2       2     1       2 #> d4      1       1     1       1 #> d5      1       1     2       1 #> o6      2       1     1       1 #> o7      2       1     1       1 #> o8      2       1     1       1 #> o9      2       1     1       1 #> o10     2       1     1       2 #> o11     1       1     2       2 #> o12     1       1     2       2 #> o13     2       1     2       2 #> o14     2       1     2       2 #> o15     2       1     1       1 #> o16     2       1     2       2 #> o17     2       1     1       2 #>  #> $observedGenotypes #>     loc1b loc1b_b loc2b loc2b_b #> m1      2       2     1       1 #> m2      1       2     1       2 #> m3      2       2     1       2 #> d4      1       1     1       1 #> d5      1       1     2       1 #> o6      2       1     1       1 #> o7      2       1     1       1 #> o8      2       1     1       1 #> o9      2       1     1       1 #> o10     2       1     1       2 #> o11     1       1     2       2 #> o12     1       1     2       2 #> o13     2       1     2       2 #> o14     2       1     2       2 #> o15     2       1     1       1 #> o16     2       1     2       2 #> o17     2       1     1       2 #>"},{"path":"https://juliengamartin.github.io/pedtricks/reference/ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates a range of statistics of pedigrees — ped_stats","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"Statistics hopefully useful describing pedigrees used quantitative genetic analyses natural populations.  module useful cohort affinities individuals can provided.  outputs produced numerical form well graphical summaries.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"","code":"ped_stats(   Ped,   cohorts = NULL,   dat = NULL,   retain = \"informative\",   includeA = TRUE,   lowMem = FALSE )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"Ped pedigree cohorts (Optional) Cohort affinities members pedigree dat (Optional) Available data based upon pedigree can pruned just informative individuals retain default value ('informative') results pedigree pruned individuals records contribute estimation quantitative genetic parameters respect available data specified dat.  Otherwise, specifying value 'ancestors' result inclusion ancestors phenotyped individuals. includeA TRUE, additive genetic relatedness matrix returned. lowMem TRUE, stats based calculation performed.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"totalMaternities Total number maternities defined pedigree. totalPaternities Total number paternities defined pedigree. totalFullSibs Total number pair-wise full sib relationships defined pedigree. totalMaternalSibs Total number pair-wise maternal sib relationships defined pedigree.  get number maternal half sibs, subtract totalFullSibs. totalPaternalSibs Total number pair-wise paternal sib relationships defined pedigree.  get number paternal half sibs, subtract totalFullSibs. totalMaternalGrandmothers Total number maternal grandmothers defined pedigree. totalMaternalGrandfathers Total number maternal grandfathers defined pedigree. totalPaternalGrandmothers Total number paternal grandmothers defined pedigree. totalPaternalGrandfathers Total number paternal grandfathers defined pedigree. pedigreeDepth pedigree depth, .e. maximum number ancestral generations, individual. inbreedingCoefficients Individual inbreeding coefficients maternalSibships Sibship size individual appearing dam column pedigree. paternalSibships Sibship size individual appearing sire column pedigree. cumulativeRelatedness Proportion pair-wise relatedness values less values ranging 0 1. relatednessCategories Discretized distribution relatedness. analyzedPedigree Returns pedigree. sampleSizesByCohort (Optional) Number individuals belonging cohort. maternitiesByCohort (Optional) Number assigned maternities offspring cohort. paternitiesByCohort (Optional) Number assigned paternities offspring cohort. fullSibsByCohort (Optional) Number pair-wise full sib relationships cohort - note sum need equal totalFullSibs pedigrees long-lived organisms. maternalSibsByCohort (Optional) Number pair-wise maternal sib relationships cohort - note sum need equal totalMaternalSibs pedigrees long-lived organisms. paternalSibsByCohort (Optional) Number pair-wise paternal sib relationships cohort - note sum need equal totalPaternalSibs pedigrees long-lived organisms. maternalGrandmothersByCohort (Optional) Numbers maternal grandmother assignments offspring cohort. maternalGrandfathersByCohort (Optional) Numbers maternal grandmother assignments offspring cohort. paternalGrandmothersByCohort (Optional) Numbers paternal grandfather assignments offspring cohort. paternalGrandfathersByCohort (Optional) Numbers paternal grandfather assignments offspring cohort. cumulativePedigreeDepth (Optional) Distributions pedigree depth cohort. meanRelatednessAmongCohorts (Optional) Mean relatedness among cohorts. cohorts (Optional) Returns cohort designations. Graphical summaries number summary statistics printed console graphicalReports=='y'.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/ped_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"","code":"data(gryphons) pedigree <- gryphons[, 1:3]  gryphons_ped_stats <- ped_stats(pedigree,   cohorts = gryphons$cohort )  gryphons_ped_stats$totalMaternities #> [1] 2435 gryphons_ped_stats$paternitiesByCohort #> 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160  #>    0    0    0    0    0    0    0    0    0    3    0    4    2    2    9    6  #> 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170  #>   33   80  118   75   91  161  157  163  128  124   summary(gryphons_ped_stats) #>                                  sumData #> records                     4.918000e+03 #> maternities                 2.435000e+03 #> paternities                 1.156000e+03 #> full sibs                   8.600000e+01 #> maternal sibs               6.957000e+03 #> maternal half sibs          6.871000e+03 #> paternal sibs               6.138000e+03 #> paternal half sibs          6.052000e+03 #> maternal grandmothers       1.503000e+03 #> maternal grandfathers       8.890000e+02 #> paternal grandmothers       5.070000e+02 #> paternal grandfathers       3.540000e+02 #> maximum pedigree depth      6.000000e+00 #> founders                    2.483000e+03 #> mean maternal sibsip size   4.183849e+00 #> mean paternal sibsip size   3.853333e+00 #> non-zero F                  2.300000e+01 #> F > 0.125                   7.000000e+00 #> mean pairwise relatedness   1.129934e-03 #> pairwise relatedness>=0.125 4.373784e-03 #> pairwise relatedness>=0.25  1.672662e-03 #> pairwise relatedness>=0.5   3.047746e-04  plot(gryphons_ped_stats)  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue...  #> Press <s> to save current plot or press <Enter> to continue..."},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions from package pedantics. — pedantics-defunct","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"functions listed transferred pedantics pedtricks short-term plan implement since relying C code need heavily updated.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-defunct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"addition, questions rates pedigree error typically encountered, effects inference elementary QG parameters basically settled (Charmantier & Réale 2005, Morrissey et al. 2007, Firth et al. 2015, Bourret & Garant 2017), outstanding questions plausibly supported functions straightforward modifications thereof. Bourret, ., D. Garant. 2017. assessment reliability quantitative genetics estimates study systems high rate extra pair paternity low recruitment.  Heredity 118: 229-38. Charmantier, ., D. Réale. 2005. misassigned paternities affect estimation heritability wild? Molecular Ecology 14: 2839-50 Firth, J.. J.D. Hadfield, .W. Santure, J. Slate B.C. Sheldon. 2015. influence non-random extra pair paternity heritability estimates derived wild pedigrees. Evolution 69: 1336-44. Morrissey, M.B., .J. Wilson, J.M. Pemberton, M.M. Ferguson. 2007. framework power sensitivity analysis quantitative genetic studies natural populations, case study Soay sheep (Ovis aries). Journal Evolutionary Biology 20: 2309-21.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-defunct.html","id":"rpederr","dir":"Reference","previous_headings":"","what":"rpederr","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"Permutes pedigree create plausible complete pedigree","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-defunct.html","id":"fpederr","dir":"Reference","previous_headings":"","what":"fpederr","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"Simulates pedigree errors missing data complete pedigree.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions from package pedantics. — makemakePedigreeFactor","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"functions listed deprecated available backward compatibility . might defunct future version possible, alternative functions similar functionality also mentioned.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"","code":"makemakePedigreeFactor(id, sire, dam, key = NULL)  makePedigreeNumeric(id, sire, dam, missingVal = NA)  drawPedigree(   Ped,   cohorts = NULL,   sex = NULL,   dat = NULL,   dots = \"n\",   plotfull = \"y\",   writeCohortLabels = \"n\",   links = \"all\",   sexInd = c(0, 1),   dotSize = 0.001,   dataDots = \"n\",   dataDots.cex = 2,   cohortLabs.cex = 1,   retain = \"informative\",   focal = NULL,   sexColours = c(\"red\", \"blue\"),   ... )  fixPedigree(ped, dat = NULL)  genomesim(   pedigree,   founders = NULL,   positions = NULL,   initHe = NULL,   mutationType = NULL,   mutationRate = NULL,   phenotyped = NULL,   founderHaplotypes = NULL,   genotyped = NULL,   returnG = \"n\",   initFreqs = NULL )  microsim(   pedigree,   genFreqs = NULL,   genotypesSample = NULL,   knownGenotypes = NULL,   records = NULL,   eRate1 = 0,   eRate2 = 0,   eRate3 = 0 )  pedigreeStat()  pedStatSummary()  phensim(   pedigree,   traits = 1,   randomA = NULL,   randomE = NULL,   parentalA = NULL,   parentalE = NULL,   sampled = NULL,   records = NULL,   returnAllEffects = FALSE )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"dependant deprecated function see pedantics help details","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"makepedigreefactor","dir":"Reference","previous_headings":"","what":"makePedigreeFactor","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function now special case convert_ped function type factor","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"makepedigreenumeric","dir":"Reference","previous_headings":"","what":"makePedigreeNumeric","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function now special case convert_ped function type numeric","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"drawpedigree","dir":"Reference","previous_headings":"","what":"drawPedigree","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment, soon replace \"ggpedigree\" function","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"fixpedigree","dir":"Reference","previous_headings":"","what":"fixPedigree","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"genomesim","dir":"Reference","previous_headings":"","what":"genomesim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"microsim","dir":"Reference","previous_headings":"","what":"microsim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"pedigreestats","dir":"Reference","previous_headings":"","what":"pedigreeStats","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function simplified functionality still available via ped_stats summary plot methods","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"pedstatsummary","dir":"Reference","previous_headings":"","what":"pedStatSummary","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function simplified functionality still available via ped_stats summary plot methods","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedantics-deprecated.html","id":"phensim","dir":"Reference","previous_headings":"","what":"phensim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedtricks-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pedtricks: Visualize, Summarize and Simulate Data from Pedigrees — pedtricks-package","title":"pedtricks: Visualize, Summarize and Simulate Data from Pedigrees — pedtricks-package","text":"Sensitivity power analysis, calculating statistics describing pedigrees wild populations, visualizing pedigrees. reboot methods developped Morrissey Wilson (2010) doi: 10.1111/j.1755-0998.2009.02817.x","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedtricks-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pedtricks: Visualize, Summarize and Simulate Data from Pedigrees — pedtricks-package","text":"pedigreeStats() pedStatSummary() replaced ped_stats() summary() plot() methods simplify workflow allow get plots without running statistics time makePedigreeFactor() makePedigreeNumeric() combined convert_ped() convert pedigree numeric factor fixPedigree() now fix_ped() genomesim(), microsim() phensim() renamed genome_sim(), micro_sim() phen_sim() backward compatibility code using pedantics older names still usable recommended.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/reference/pedtricks-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pedtricks: Visualize, Summarize and Simulate Data from Pedigrees — pedtricks-package","text":"Maintainer: Julien Martin julien.martin@uottawa.ca (ORCID) Authors: Matthew Wolak mew0099@auburn.edu (ORCID) Susan Johnston Susan.Johnston@ed.ac.uk (ORCID) Michael Morrissey michael.morrissey@st-andrews.ac.uk (ORCID)","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to simulated phenotypic data — phen_sim","title":"A function to simulated phenotypic data — phen_sim","text":"Simulates phenotypic data across arbitrary pedigrees.   phen_sim simulate direct, maternal paternal genetic environmental effects arbitrary number traits arbitrary patterns missing data.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to simulated phenotypic data — phen_sim","text":"","code":"phen_sim(   pedigree,   traits = 1,   randomA = NULL,   randomE = NULL,   parentalA = NULL,   parentalE = NULL,   sampled = NULL,   records = NULL,   returnAllEffects = FALSE,   verbose = TRUE )"},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to simulated phenotypic data — phen_sim","text":"pedigree pedigree traits number traits data simulated. randomA additive genetic covariance matrix, dimensions multiple traits - see details randomE additive environmental covariance matrix, dimensions multiple traits - see details parentalA vector indicating effects randomA () treat parental effects parentalE vector indicating effects randomE () treat parental effects sampled vector indicating individuals sampled records single value, array matrix specifying data record availability - see details returnAllEffects TRUE individual breeding values environmental effects returned verbose TRUE provide progress bar messages, Default: TRUE","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to simulated phenotypic data — phen_sim","text":"phenotypes dataframe containing phenotypes individuals specified records. allEffects (optional) dataframe direct indirect genetic environmental effects.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to simulated phenotypic data — phen_sim","text":"randomA randomE square matrices dimension equal sum number direct indirect effects.  must multiple number traits, .e. indirect effect simulated one multiple traits, traits indirect effect included (co)variances zero. parentalA parentalE optional vectors characters indicating trait positions randomA randomE treated indirect effects, effects treat maternal paternal.  Valid values 'd', 'm', 'p', direct, maternal indirect paternal indirect effects, respectively. records can specified either (1) single value applied individuals traits, (2) vector length number traits, representing trait-specific rates applied uniformly individuals, (3) data frames rows individual columns trait.  third option, observed patterns data availability can simulated supplying 0s 1s missing available individual genotypes, respectively.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/reference/phen_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to simulated phenotypic data — phen_sim","text":"","code":"## make up a pedigree id <- c(\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\") dam <- c(NA, NA, NA, \"a1\", \"a1\", \"a1\", \"a4\", \"a4\", \"a4\") sire <- c(NA, NA, NA, \"a2\", \"a2\", \"a2\", \"a5\", \"a6\", \"a6\") pedigree <- as.data.frame(cbind(id, sire, dam))  traits <- 2 ## no correlations randomA <- diag(4) randomE <- diag(4) parentalA <- c(\"d\", \"d\", \"m\", \"m\") parentalE <- c(\"d\", \"d\", \"m\", \"m\")  ## generate phenoypic data based on this architecture phen_sim(   pedigree = pedigree, traits = 2, randomA = randomA, randomE = randomE,   parentalA = parentalA, parentalE = parentalE ) #> Simulating breeding values and environmental effects... #> done.  #> Calculating phenotypes... #> done.  #> $phenotypes #>    id      trait_1    trait_2 #> a1 a1  0.635630356  2.5303279 #> a2 a2  0.573565965  1.6102071 #> a3 a3 -0.821761510 -1.1875030 #> a4 a4 -0.008898436  2.3850244 #> a5 a5  1.896592223  3.3994600 #> a6 a6  2.581344532  0.8592014 #> a7 a7  2.887748532  1.9672431 #> a8 a8  2.682974192  0.9062174 #> a9 a9  1.474571866  2.2015559 #>   ## let's do it again but see how the phenotypes were composed phen_sim(   pedigree = pedigree, traits = 2, randomA = randomA, randomE = randomE,   parentalA = parentalA, parentalE = parentalE, returnAllEffects = TRUE ) #> Simulating breeding values and environmental effects... #> done.  #> Calculating phenotypes... #> done.  #> $phenotypes #>    id    trait_1    trait_2 #> a1 a1 -0.4099814 -0.2708281 #> a2 a2 -0.8987986  4.0180170 #> a3 a3 -2.0619251  0.4699000 #> a4 a4  0.5101248  1.7330805 #> a5 a5  3.1419989  2.2318840 #> a6 a6 -2.0368235  0.8033704 #> a7 a7 -0.1579793  0.1603304 #> a8 a8 -0.9392673 -1.7291288 #> a9 a9 -3.5522131  0.5295370 #>  #> $allEffects #>    id sire  dam      a_tr1      a_tr2   bv_m_tr1   bv_m_tr2       e_tr1 #> a1 a1 <NA> <NA>  1.4974139 -0.3028269 -1.3768313  0.8831702  0.11062832 #> a2 a2 <NA> <NA>  0.6714203  1.2300224  1.6454679 -0.1829260 -0.05961225 #> a3 a3 <NA> <NA> -1.3792578  1.2506006 -1.8762368 -0.3687876 -0.57938809 #> a4 a4   a2   a1 -0.4212235  0.7023495 -0.9790743  0.2113033  0.73325992 #> a5 a5   a2   a1  1.7314623  1.2263090  1.1616050 -0.8189242  1.21244833 #> a6 a6   a2   a1 -0.8685181  0.6505350  0.8587998 -0.1159925 -1.36639361 #> a7 a7   a5   a4  0.3819610  0.7928566  0.2472483 -1.3510993  0.69450905 #> a8 a8   a6   a4 -0.1324367 -1.0047145 -0.1063885 -0.2844761  0.42761881 #> a9 a9   a6   a4 -0.8432258  1.0829131 -0.2055727  0.2137410 -1.47453793 #>         e_tr2    e_m_tr1     e_m_tr2 P_bv_m_tr1 P_bv_m_tr2  P_e_m_tr1 #> a1  0.2742022  1.5749196  0.56776783 -0.9014624  0.5380665 -1.1165613 #> a2 -0.1495877  0.2661688  0.52840324  0.5204204  0.1868176 -2.0310270 #> a3  0.9421994 -0.7063614 -1.27540210 -0.8440720 -0.4520918  0.7407928 #> a4 -0.4202071 -0.2553751 -0.36923822 -1.3768313  0.8831702  1.5749196 #> a5 -0.4453630  1.1386675  0.19052348 -1.3768313  0.8831702  1.5749196 #> a6 -1.2981026 -2.1370983 -0.09620553 -1.3768313  0.8831702  1.5749196 #> a7 -0.4745912  1.7631306  2.02584606 -0.9790743  0.2113033 -0.2553751 #> a8 -0.5664793 -0.8338353  0.39825915 -0.9790743  0.2113033 -0.2553751 #> a9 -0.3954412 -0.1307025 -1.99949395 -0.9790743  0.2113033 -0.2553751 #>     P_e_m_tr2   Phen_tr1   Phen_tr2 #> a1 -0.7802699 -0.4099814 -0.2708281 #> a2  2.7507648 -0.8987986  4.0180170 #> a3 -1.2708082 -2.0619251  0.4699000 #> a4  0.5677678  0.5101248  1.7330805 #> a5  0.5677678  3.1419989  2.2318840 #> a6  0.5677678 -2.0368235  0.8033704 #> a7 -0.3692382 -0.1579793  0.1603304 #> a8 -0.3692382 -0.9392673 -1.7291288 #> a9 -0.3692382 -3.5522131  0.5295370 #>"},{"path":"https://juliengamartin.github.io/pedtricks/reference/plot.ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from ped_stats — plot.ped_stats","title":"Plot output from ped_stats — plot.ped_stats","text":"Generates manageable summary pedigree-wide statistics reported ped_stats, either single pedigree comparison pedigrees","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/plot.ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from ped_stats — plot.ped_stats","text":"","code":"# S3 method for class 'ped_stats' plot(x, lowMem = FALSE, grContrast = FALSE, ...)"},{"path":"https://juliengamartin.github.io/pedtricks/reference/plot.ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from ped_stats — plot.ped_stats","text":"x object class ped_stats generated ped_stats lowMem TRUE, stats based calculation performed. grContrast TRUE, uglier shades red blue used denote male female statistics graphical reports, colours provide better contrast greyscale. ... extra arguments","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/plot.ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output from ped_stats — plot.ped_stats","text":"Returns table numbers records, maternities, paternities, pairwise sibship relationships, numbers different classes grand-parental relationships, pedigree depth, number founders, mean sibship sizes, simple statistics numbers inbred non-inbred individuals, proportions pairwise relationship coefficients equal greater several thresholds.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/summary.ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-processes output from ped_stats — summary.ped_stats","title":"Post-processes output from ped_stats — summary.ped_stats","text":"Generates manageable summary pedigree-wide statistics reported ped_stats, either single pedigree comparison pedigrees","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/summary.ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-processes output from ped_stats — summary.ped_stats","text":"","code":"# S3 method for class 'ped_stats' summary(object, ...)"},{"path":"https://juliengamartin.github.io/pedtricks/reference/summary.ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-processes output from ped_stats — summary.ped_stats","text":"object object class ped_stats generated ped_stats ... extra arguments","code":""},{"path":"https://juliengamartin.github.io/pedtricks/reference/summary.ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-processes output from ped_stats — summary.ped_stats","text":"Returns table numbers records, maternities, paternities, pairwise sibship relationships, numbers different classes grand-parental relationships, pedigree depth, number founders, mean sibship sizes, simple statistics numbers inbred non-inbred individuals, proportions pairwise relationship coefficients equal greater several thresholds.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_042-0-4","dir":"Changelog","previous_headings":"","what":"0.4.2","title":"pedtricks 0.4","text":"fix CRAN submission","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_041-0-4","dir":"Changelog","previous_headings":"","what":"0.4.1","title":"pedtricks 0.4","text":"-ped_stats: optimisation run even faster. Now running 0.7s gryphons pedigree instead 160s 210x faster. Loops slow","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_040-0-4","dir":"Changelog","previous_headings":"","what":"0.4.0","title":"pedtricks 0.4","text":"ped_stats: optimized run much faster (think can even improved). Now running 1.6s gryphons pedigree instead 160s 100x faster. Now using sparse matrix format removing sluggish loops estimations.","code":""},{"path":[]},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_032-0-3","dir":"Changelog","previous_headings":"","what":"0.3.2","title":"pedtricks 0.3","text":"adding functionality highlight phenotyped individuals pheno argument","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_031-0-3","dir":"Changelog","previous_headings":"","what":"0.3.1","title":"pedtricks 0.3","text":"draw pedigree using ggplot2 compatible dplyr/tidyverse use return ggplot object can modified ggplot functions optimized graph layout igrah returns trellis plot object visualizing relatedness among pedigreed individuals","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"id_030-0-3","dir":"Changelog","previous_headings":"","what":"0.3.0","title":"pedtricks 0.3","text":"draw pedigree using ggplot2 compatible dplyr/tidyverse use return ggplot object can modified ggplot functions","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"pedtricks-01","dir":"Changelog","previous_headings":"","what":"pedtricks 0.1","title":"pedtricks 0.1","text":"Initial transfer update CRAN archived pedantics package new name pedtricks.","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"deprecated-from-pedantics-0-1","dir":"Changelog","previous_headings":"","what":"DEPRECATED from pedantics","title":"pedtricks 0.1","text":"rpederr()fpederr() implemented pedigreeStats() pedStatSummary() replaced ped_stats() summary() plot() methods simplify workflow allow get plots without running statistics time makePedigreeFactor() makePedigreeNumeric() combined convert_ped() convert pedigree numeric factor","code":""},{"path":"https://juliengamartin.github.io/pedtricks/news/index.html","id":"small-changes-0-1","dir":"Changelog","previous_headings":"","what":"Small changes","title":"pedtricks 0.1","text":"fixPedigree() now fix_ped() genomesim(), microsim() phensim() renamed genome_sim(), micro_sim() phen_sim()","code":""}]
