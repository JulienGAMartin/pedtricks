[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pedtricks authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/TODO.html","id":null,"dir":"","previous_headings":"","what":"TO DO list","title":"TO DO list","text":"document fix plot function ped_stats convert plots plot.ped_stats ggplot format add ORCID us add functions plot relatedness matrix ggpedigree.R - replace draw_ped ggpedigree - make sure functionality matches - optimize ggpedigree x-coordinates (similar PedView programme) - add sex information (took temporarily) - add data checks e.g. vectors length etc.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julien Martin. Author, maintainer. Matthew Wolak. Author. Susan Johnston. Author. Michael Morrissey. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martin J, Wolak M, Johnston S, Morrissey M (2024). pedtricks: Functions visualize, summarize simulate data pedigrees. R package version 0.1.0.0000.","code":"@Manual{,   title = {pedtricks: Functions to visualize, summarize and simulate data from pedigrees},   author = {Julien Martin and Matthew Wolak and Susan Johnston and Michael Morrissey},   year = {2024},   note = {R package version 0.1.0.0000}, }"},{"path":"/index.html","id":"pedtricks-package","dir":"","previous_headings":"","what":"Functions to visualize, summarize and simulate data from pedigrees","title":"Functions to visualize, summarize and simulate data from pedigrees","text":"package taking core functions pedantics, removed dependencies archived packages (“MasterBayes”) removed function based C libraries outdated, providing easier maintain package New functions include ggplot function plot pedigree ggpedigree() Install ","code":"remotes::install_github(   \"JulienGAMartin/pedtricks\" )"},{"path":[]},{"path":"/index.html","id":"defunct-functions","dir":"","previous_headings":"Changes from pedantics","what":"Defunct functions","title":"Functions to visualize, summarize and simulate data from pedigrees","text":"rpederr fpederr removed package","code":""},{"path":"/index.html","id":"major-changes","dir":"","previous_headings":"Changes from pedantics","what":"major changes","title":"Functions to visualize, summarize and simulate data from pedigrees","text":"pedigreeStats() pedStatSummary() replaced ped_stats() summary() plot() methods simplify workflow allow get plots without running statistics time makePedigreeFactor() makePedigreeNumeric() combined convert_ped() convert pedigree numeric factor","code":""},{"path":"/index.html","id":"functions-renamed","dir":"","previous_headings":"Changes from pedantics","what":"functions renamed","title":"Functions to visualize, summarize and simulate data from pedigrees","text":"fixPedigree() now fix_ped() genomesim(), microsim() phensim() renamed genome_sim(), micro_sim() phen_sim()","code":""},{"path":"/reference/convert_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"internal pedtricks modules require pedigrees specified numerical values, including numerical values missing data. function provides conversion numeric also back factors needed","code":""},{"path":"/reference/convert_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"","code":"convert_ped(type = \"numeric\", id, sire, dam, missingVal = NA, key = NULL)"},{"path":"/reference/convert_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"type define convert pedigree \"numeric\" \"factor\" id Individual identifiers - pass using .character() sire Sire codes - pass using .character() dam Dam codes - pass using .character() missingVal indicator substituted missing values key dataframe, produced convert_ped, specifying factor codes numeric values id, sire, dam","code":""},{"path":"/reference/convert_ped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"numericPedigree factor pedigree numeric form idKey key facilitate conversion back original identifiers","code":""},{"path":"/reference/convert_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a pedigree with individuals specified as factors to a numeric pedigree — convert_ped","text":"","code":"pedigree <- as.data.frame(matrix(c(   \"m1\",   NA,     NA,   \"m2\",   NA,     NA,   \"m3\",   NA,     NA,   \"d4\",   NA,     NA,   \"d5\",   NA,     NA,   \"o6\",   \"m1\",   \"d4\",   \"o7\",   \"m1\",   \"d4\",   \"o8\",   \"m1\",   \"d4\",   \"o9\",   \"m1\",   \"d4\",   \"o10\",  \"m2\",   \"d5\",   \"o11\",  \"m2\",   \"d5\",   \"o12\",  \"m2\",   \"d5\",   \"o13\",  \"m2\",   \"d5\",   \"o14\",  \"m3\",   \"d5\",   \"o15\",  \"m3\",   \"d5\",   \"o16\",  \"m3\",   \"d5\",   \"o17\",  \"m3\",   \"d5\" ), 17, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x])  ## make the test pedigree numeric with NAs denoted by -1 convert_ped(   type = \"numeric\",   id = as.character(pedigree[, 1]),   dam = as.character(pedigree[, 2]),   sire = as.character(pedigree[, 3]),   missingVal = -1 ) #> $numericPedigree #>    id sire dam #> 1   3   -1  -1 #> 2   4   -1  -1 #> 3   5   -1  -1 #> 4   1   -1  -1 #> 5   2   -1  -1 #> 6  14    1   3 #> 7  15    1   3 #> 8  16    1   3 #> 9  17    1   3 #> 10  6    2   4 #> 11  7    2   4 #> 12  8    2   4 #> 13  9    2   4 #> 14 10    2   5 #> 15 11    2   5 #> 16 12    2   5 #> 17 13    2   5 #>  #> $idKey #>    pn   pf #> 1   3   m1 #> 2   4   m2 #> 3   5   m3 #> 4   1   d4 #> 5   2   d5 #> 6  14   o6 #> 7  15   o7 #> 8  16   o8 #> 9  17   o9 #> 10  6  o10 #> 11  7  o11 #> 12  8  o12 #> 13  9  o13 #> 14 10  o14 #> 15 11  o15 #> 16 12  o16 #> 17 13  o17 #> 18 -1 <NA> #>"},{"path":"/reference/draw_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a graphical representation of a pedigree — draw_ped","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Plots pedigree, options specific considerations pedigrees used quantitative genetic inferencein natural populations.  Pedigrees containing individuals informative respect (genetic) variation arbitrary trait can plotted, potentially overlain complete pedigree. Functions also exist plot various types pedgiree links associated focal individuals.","code":""},{"path":"/reference/draw_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a graphical representation of a pedigree — draw_ped","text":"","code":"draw_ped(   Ped,   cohorts = NULL,   sex = NULL,   dat = NULL,   dots = \"n\",   plotfull = \"y\",   writeCohortLabels = \"n\",   links = \"all\",   sexInd = c(0, 1),   dotSize = 0.001,   dataDots = \"n\",   dataDots.cex = 2,   cohortLabs.cex = 1,   retain = \"informative\",   focal = NULL,   sexColours = c(\"red\", \"blue\"),   ... )"},{"path":"/reference/draw_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Ped ordered pedigree 3 columns: id, dam, sire cohorts optional numeric vector length pedigree designating, example cohort afinities birth years sex optional numeric vector length pedigree containing sexes (may unknown) indivduals entries pedigree.  Defaults (modifiable sexInd) 0=male 1=female dat optional vector data frame containg indicators data availablility.  dat contains ones zeros, individual entry one considered data records.  data contains values ones zeros, individuals pedigree rows data contain least one available record, .e., one data record NA, treated data. dots 'y', dot printed representing individual pedigree.  sexes available, dots colour coded sex. plotfull used dat supplied.  'y' (default), individuals pedigree uninformative respect available data pedigree links plotted gray. writeCohortLabels used cohorts used.  plot cohort values left hand side pedigree image. links Default '', values 'mums' print maternal pedigree links 'dads' print paternal pedigree links. sexInd used sex supplied vector sex specifiers differs default. dotSize Set dot size bigger smaller dataDots print dots dots denoting indivdiuals, denoting individuals available data indicated dat. dataDots.cex controls size dataDots relative dots. cohortLabs.cex controls size cohort lables. retain pedigree links informative relative phenotypic data availability plotted, controls whether pruned pedigree based phenotypic data plotted (set \"pruned\"), whether strictly informative pedigree links plotted (default) focal optional list containing id individual kinds relatives focal individual plot pedigree links.  Available types 'offspring','descendents','parents',,ancestors', 'kin'. sexColours colours used draw points lines associated males females. ... Additional graphical parameters.","code":""},{"path":[]},{"path":"/reference/draw_ped.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a graphical representation of a pedigree — draw_ped","text":"Michael Morrissey michael.morrissey@st-andrews.ac.uk","code":""},{"path":"/reference/draw_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a graphical representation of a pedigree — draw_ped","text":"","code":"data(gryphons) pedigree <- fix_ped(gryphons[, 1:3])  ## draw the gryphon pedigree by pedigree depth draw_ped(pedigree)  ## draw the gryphon pedigree by cohort draw_ped(pedigree,cohorts=gryphons$cohort,writeCohortLabels='y',   cohortLabs.cex=1)  ## draw the gryphon pedigree by cohort with only maternal links draw_ped(pedigree, cohorts = gryphons$cohort, links = \"mums\")  ## draw the gryphon pedigree by cohort with colour only for those ## indiduals that are informative relative to the quantitative ## genetics of a hypothetical trait only measured for individuals ## in the last two cohorts, emphasize the phenotyped individuals ## with large black dots, and all other individuals with dots ## colour coded by sex: dataAvailability <- (gryphons$cohort >= (max(gryphons$cohort) - 1)) + 0  draw_ped(pedigree,cohorts=gryphons$cohort,sex=gryphons$sex,   dots='y',dat=dataAvailability,writeCohortLabels='y',dataDots='y')  #> Individuals in full pedigree: 4918  #> Individuals in informative pedigree subset: 721"},{"path":"/reference/extractA.html","id":null,"dir":"Reference","previous_headings":"","what":"Allele Frequencies — extractA","title":"Allele Frequencies — extractA","text":"Extracts allele frequencies genotype data","code":""},{"path":"/reference/extractA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allele Frequencies — extractA","text":"","code":"extractA(G, marker.type = \"MSW\")"},{"path":"/reference/extractA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allele Frequencies — extractA","text":"G data frame list genotype objects marker.type \"MSW\" \"MSC\" co-dominant markers Wang's (2004) model genotyping error CERVUS's model genotyping error (Marshall, 1998) \"AFLP\" dominant markers.","code":""},{"path":"/reference/extractA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allele Frequencies — extractA","text":"list allele frequnecies loci","code":""},{"path":[]},{"path":"/reference/extractA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Allele Frequencies — extractA","text":"Jarrod Hadfield j.hadfield@ed.ac.uk","code":""},{"path":"/reference/extractA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allele Frequencies — extractA","text":"","code":"if (FALSE) { # \\dontrun{   data(WarblerG)    A<-extractA(WarblerG)   A[[1]] } # }"},{"path":"/reference/fix_ped.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","text":"Manipulating pedigrees prepare requirements subsequent analyses Prepares pedigree conform requirements many softwares used quantitative genetic analysis, well many functions pedantics.","code":""},{"path":"/reference/fix_ped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","text":"","code":"fix_ped(Ped, dat = NULL)"},{"path":"/reference/fix_ped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","text":"Ped ordered pedigree 3 columns: id, dam, sire dat optional data frame, length pedigree","code":""},{"path":"/reference/fix_ped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","text":"Returns pedigree individuals exsit dam sire columns represented record lines, occurring records first offspring.  data supplied, fix_ped return dataframe, first two columns 'fixed' pedigree, following columns contain appropriately reordered data.","code":""},{"path":"/reference/fix_ped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulating pedigrees to prepare them for requirements of subsequent analyses Prepares a pedigree to conform with requirements of many softwares used in quantitative genetic analysis, as well as for many of the functions in pedantics. — fix_ped","text":"","code":"##  a valid pedigree, i.e., no loops, no bisexuality, etc., ## but where not all parents have a record line, and where ## parents do not necessarily occur before their offspring: pedigree <- as.data.frame(matrix(c(   10, 1, 2,   11, 1, 2,   12, 1, 3,   13, 1, 3,   14, 4, 5,   15, 6, 7,   4, NA, NA,   5, NA, NA,   6, NA, NA,   7, NA, NA ), 10, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") pedigree #>    id dam sire #> 1  10   1    2 #> 2  11   1    2 #> 3  12   1    3 #> 4  13   1    3 #> 5  14   4    5 #> 6  15   6    7 #> 7   4  NA   NA #> 8   5  NA   NA #> 9   6  NA   NA #> 10  7  NA   NA fixedPedigree <- fix_ped(Ped = pedigree) fixedPedigree #>    id  dam sire #> 7   4 <NA> <NA> #> 8   5 <NA> <NA> #> 9   6 <NA> <NA> #> 10  7 <NA> <NA> #> 31  1 <NA> <NA> #> 61  2 <NA> <NA> #> 63  3 <NA> <NA> #> 1  10    1    2 #> 2  11    1    2 #> 3  12    1    3 #> 4  13    1    3 #> 5  14    4    5 #> 6  15    6    7"},{"path":"/reference/genome_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to simulate QTL and/or SNP data. — genome_sim","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Simulates chromosome arbitrary length arbitrary numbers, types, spacings genetic loci arbitrary pedigrees.","code":""},{"path":"/reference/genome_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"","code":"genome_sim(   pedigree,   founders = NULL,   positions = NULL,   initHe = NULL,   mutationType = NULL,   mutationRate = NULL,   phenotyped = NULL,   founderHaplotypes = NULL,   genotyped = NULL,   returnG = \"n\",   initFreqs = NULL )"},{"path":"/reference/genome_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"pedigree pedigree founders vector indicator variables denoting founder status (1=founder, 0=non-founder) positions Genome locations cM markers initHe Initial levels expected heterozygosity mutationType vector locus types - see details mutationRate vector mutation rates phenotyped vector IDs individuals return phenotypic data founderHaplotypes matrix dataframe containing founder haplotypes genotyped vector IDs individuals return genotypic data returnG 'y' genotypic data loci (including cIAM loci) returned. initFreqs list allele frequencies loci.  initFreqs specified, override information initHe.  extractA package MasterBayes can used obtain obtain initFreqs form sample genotypes.  cIAM loci, allele names initFreqs allelic substitution effects.","code":""},{"path":"/reference/genome_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Phenotypes vector phenotypes.  Calculated sum allelic effects.  Scaling currently left done post-hoc. MarkerData vector marker genotypes, .e. alleles loci except designated `cIAM'","code":""},{"path":"/reference/genome_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"Valid mutation types Micro', Dom', dIAM' cIAM', microsatellite, dominant (AFLP), discrete infinite alleles mutation model loci (SNPs), continuous infinite alleles mutation model loci (polymorphisms effecting phenotypic variation).  cIAM loci mutational allelic substitution effects taken drawn normal distribution mean 0 variance 1.","code":""},{"path":[]},{"path":"/reference/genome_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to simulate QTL and/or SNP data. — genome_sim","text":"","code":"testData <- as.data.frame(matrix(   c(     1,      NA,     NA,     1,      1,      1,      2,      2,     2,      NA,     NA,     1,      1,      1,      2,      2,     3,      NA,     NA,     1,      1,      1,      2,      2,     4,      NA,     NA,     1,      0,      1,      2,      2,     5,      NA,     NA,     1,      0,      1,      2,      2,     6,      1,      4,      0,      -1,     2,      3,      3,     7,      1,      4,      0,      -1,     2,      3,      3,     8,      1,      4,      0,      -1,     2,      3,      3,     9,      1,      4,      0,      -1,     2,      3,      3,     10,     2,      5,      0,      -1,     2,      3,      3,     11,     2,      5,      0,      -1,     2,      3,      3,     12,     2,      5,      0,      -1,     2,      3,      3,     13,     2,      5,      0,      -1,     2,      3,      3,     14,     3,      5,      0,      -1,     2,      3,      3,     15,     3,      5,      0,      -1,     2,      3,      3,     16,     3,      5,      0,      -1,     2,      3,      3,     17,     3,      5,      0,      -1,     2,      3,      3   ),   17, 8,   byrow = TRUE ))  names(testData) <- c(   \"id\", \"dam\", \"sire\", \"founder\", \"sex\",   \"cohort\", \"first\", \"last\" ) pedigree <- as.data.frame(cbind(   testData$id, testData$dam,   testData$sire )) for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x]) names(pedigree) <- c(\"id\", \"dam\", \"sire\") pedigree #>    id  dam sire #> 1   1 <NA> <NA> #> 2   2 <NA> <NA> #> 3   3 <NA> <NA> #> 4   4 <NA> <NA> #> 5   5 <NA> <NA> #> 6   6    1    4 #> 7   7    1    4 #> 8   8    1    4 #> 9   9    1    4 #> 10 10    2    5 #> 11 11    2    5 #> 12 12    2    5 #> 13 13    2    5 #> 14 14    3    5 #> 15 15    3    5 #> 16 16    3    5 #> 17 17    3    5  ## make up some microsatellite and gene allele frquencies: sampleGenotypes <- as.data.frame(matrix(c(   1, 2, -1.32, 0.21, 2, 1, 0.21, 0.21 ), 2, 4, byrow = TRUE)) testFreqs <- extractA(sampleGenotypes)  ## note that alleles at the gene locus are given as their ## allelic substitution effects: testFreqs #> $V2 #>   2   1  #> 0.5 0.5  #>  #> $V4 #>  0.21 -1.32  #>  0.75  0.25  #>   ## simulate data for these indivdiuals based on a single QTL ## with two equally alleles with balanced frequencies in the ## founders, linked (2 cM) to a highly  polymorphic microsatellite: genome_sim(   pedigree = pedigree, founders = testData$founder, positions = c(0, 2),   mutationType = c(\"Micro\", \"cIAM\"), mutationRate = c(0, 0),   initFreqs = testFreqs, returnG = \"y\" ) #> Processing pedigree...  #> 0%                     50%                     100%  #> |                       |                       |  #> ----------------- #>  ...done.  #>  #>  Calculating phenotypes...done.  #>  #>  Tabulating marker genotypes...done.  #> $Phenotypes #>    V1    V2 #> 1   1 -1.11 #> 2   2  0.42 #> 3   3 -1.11 #> 4   4  0.42 #> 5   5 -1.11 #> 6   6 -1.11 #> 7   7  0.42 #> 8   8  0.42 #> 9   9  0.42 #> 10 10  0.42 #> 11 11  0.42 #> 12 12 -1.11 #> 13 13 -1.11 #> 14 14  0.42 #> 15 15 -1.11 #> 16 16 -2.64 #> 17 17 -1.11 #>  #> $MarkerData #> [1] doubleids markers   #> <0 rows> (or 0-length row.names) #>  #> $genomes #>    doubleids V2    V3 #> 1          1  2 -1.32 #> 2          1  1  0.21 #> 3          2  2  0.21 #> 4          2  2  0.21 #> 5          3  1 -1.32 #> 6          3  1  0.21 #> 7          4  2  0.21 #> 8          4  2  0.21 #> 9          5  2  0.21 #> 10         5  2 -1.32 #> 11         6  2 -1.32 #> 12         6  2  0.21 #> 13         7  2  0.21 #> 14         7  2  0.21 #> 15         8  1  0.21 #> 16         8  2  0.21 #> 17         9  1  0.21 #> 18         9  2  0.21 #> 19        10  2  0.21 #> 20        10  2  0.21 #> 21        11  2  0.21 #> 22        11  2  0.21 #> 23        12  2  0.21 #> 24        12  2 -1.32 #> 25        13  2  0.21 #> 26        13  2 -1.32 #> 27        14  1  0.21 #> 28        14  2  0.21 #> 29        15  1  0.21 #> 30        15  2 -1.32 #> 31        16  1 -1.32 #> 32        16  2 -1.32 #> 33        17  1  0.21 #> 34        17  2 -1.32 #>  ## since we specified returnG='y', we can check that ## the phenotypes add up to the ## allelic substitution effects for the second locus."},{"path":"/reference/genotype.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Genotype Objects for all Loci — genotype.list","title":"Genotype Objects for all Loci — genotype.list","text":"Creates list genotype objects matrix data.frame multilocus genotypes.","code":""},{"path":"/reference/genotype.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genotype Objects for all Loci — genotype.list","text":"","code":"genotype.list(G, marker.type = \"MSW\")"},{"path":"/reference/genotype.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genotype Objects for all Loci — genotype.list","text":"G matrix data.frame multilocus genotypes individuals rows loci across columns. Adjacent columns taken locus marker.type \"MSW\" \"MSC\" co-dominant markers Wang's (2004) model genotyping error CERVUS's model genotyping error (Kalinowski, 2006; Marshall, 1998) \"AFLP\" dominant markers (Hadfield, 2009).","code":""},{"path":"/reference/genotype.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genotype Objects for all Loci — genotype.list","text":"list genotype objects loci","code":""},{"path":"/reference/genotype.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Genotype Objects for all Loci — genotype.list","text":"Jarrod Hadfield j.hadfield@ed.ac.uk","code":""},{"path":"/reference/genotype.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genotype Objects for all Loci — genotype.list","text":"","code":"if (FALSE) { # \\dontrun{   data(WarblerG)    G<-genotype.list(WarblerG[,-1])   summary(G[[1]]) } # }"},{"path":"/reference/ggpedigree.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpedigree: Pedigree plotting tool for complex pedigrees. — ggpedigree","title":"ggpedigree: Pedigree plotting tool for complex pedigrees. — ggpedigree","text":"ggpedigree: Pedigree plotting tool complex pedigrees.","code":""},{"path":"/reference/ggpedigree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggpedigree: Pedigree plotting tool for complex pedigrees. — ggpedigree","text":"","code":"ggpedigree(   ids = NULL,   mothers = NULL,   fathers = NULL,   cohort = NULL,   sex = NULL,   sex_female = NULL,   sex_male = NULL,   id_labels = FALSE,   remove_singletons = TRUE,   plot_unknown_cohort = TRUE,   randomise_x_coordinates = FALSE,   print_cohort_labels = TRUE,   return_plot_tables = FALSE,   suppress_plot = FALSE,   line_col_mother = \"#E41A1C\",   line_col_father = \"#377EB8\",   line_alpha = 0.3,   point_size = 1,   point_colour = \"black\",   point_alpha = 1,   xlab = \"\",   ylab = \"\",   gg_theme = NULL )"},{"path":"/reference/ggpedigree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggpedigree: Pedigree plotting tool for complex pedigrees. — ggpedigree","text":"ids vector individual identifiers mothers vector mothers corresponding ids. Missing values 0 NA. fathers vector fathers corresponding ids. Missing values 0 NA. cohort integer. Default NULL. optional vector assigning cohort id. NULL, kinship2::kindepth used assign cohorts ids. sex integer character. Default NULL. optional vector assigning sex id. can value, first level numerically alphabetically (e.g. 0 \"F\") plotted circle (traditionally denoting female) second level plotted square (traditionally denoting male). negative values, NA values, third alphabetically values plotted triangle. NOTE: can overridden specifying sex_female sex_male values. sex_female integer character. Default NULL. Indicates value used sex females. plotted circles. sex_male integer character. Default NULL. Indicates value used sex males. plotted squares. id_labels logical. Default FALSE. Print ids pedigree plot. remove_singletons logical. Default TRUE. Remove ids relatives .e., offspring parents assigned. plot_unknown_cohort logical. Default TRUE. Plots ids unknown cohorts. plotted \"Unknown\" cohort top pedigree. aware mothers fathers individuals plotted . randomise_x_coordinates logical. Default TRUE. Randomise position individuals within cohort. print_cohort_labels logical. Default TRUE. Prints cohort levels left hand side plot. return_plot_tables logical. Default FALSE. Returns object line point data used plot. suppress_plot logical. Default FALSE. stop plot output e.g., using return_plot_tables retrieve plot objects. line_col_mother Default = \"#E41A1C\". Line colour maternal links. line_col_father Default = \"#377EB8\". Line colour paternal links. line_alpha Default = 0.3. Line alpha (transparency) value maternal paternal links. point_size Default = 1. Point size ids. point_colour Default = \"black\". Point colour ids. point_alpha Default = 1. Point alpha ids. xlab Default = blank. x-axis label. ylab Default = blank. y-axis label gg_theme Alternate theme information specified ggplot::theme() object.","code":""},{"path":"/reference/gryphons.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset for pedtricks examples and tutorial — gryphons","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"contains pedigree life history data fictional population.  data relevant power sensitivity analyses quantitative genetic studies natural populations.","code":""},{"path":"/reference/gryphons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"","code":"gryphons"},{"path":"/reference/gryphons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"object class data.frame 4918 rows 9 columns.","code":""},{"path":"/reference/gryphons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example dataset for pedtricks examples and tutorial — gryphons","text":"id dam sire sex cohort fatherErrorProb fatherSampledProb firstReproCohort lastReproCohort ","code":""},{"path":"/reference/micro_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates microsatellite data across a pedigree. — micro_sim","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"Uses pedgiree parents identified non-founding individuas simulates microsatellite genotypes","code":""},{"path":"/reference/micro_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"","code":"micro_sim(   pedigree,   genFreqs = NULL,   genotypesSample = NULL,   knownGenotypes = NULL,   records = NULL,   eRate1 = 0,   eRate2 = 0,   eRate3 = 0 )"},{"path":"/reference/micro_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"pedigree pedigree genFreqs (optional) list allele frequencies, can produced extractA genotypesSample (required genFreqs supplied) sample genotypes estimate population allele frequencies knownGenotypes (yet implemented) data frame genotypes (potentially subset) founder individuals records Record availability, see details. eRate1 rate genotypic substitution errors, .e., true genotype given locus replaced pair alleles selected random based population allele frequencies eRate2 rate allelic substitution errors, .e. allele erroneously replaced given locus allele chosen random based population allele frequencies eRate3 rate large allele dropouts, simulated setting value larger allele locus value smaller allele","code":""},{"path":"/reference/micro_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"trueGenotypes data frame true genotypes observedGenotypes data frame plausible observed genotypes, given specified patterns missingness errors.","code":""},{"path":"/reference/micro_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"Error rates data availability rates can specified either (1) single values applied individuals loci, (2) vector length number loci, representing locus-specific rates applied uniformly individuals, (3) data frames rows individual columns locus.  third option, observed patterns data availability can simulated supplying 0s 1s missing available individual genotypes, respectively.","code":""},{"path":[]},{"path":"/reference/micro_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates microsatellite data across a pedigree. — micro_sim","text":"","code":"pedigree <- as.data.frame(matrix(c(   \"m1\",   NA,     NA,   \"m2\",   NA,     NA,   \"m3\",   NA,     NA,   \"d4\",   NA,     NA,   \"d5\",   NA,     NA,   \"o6\",   \"m1\",   \"d4\",   \"o7\",   \"m1\",   \"d4\",   \"o8\",   \"m1\",   \"d4\",   \"o9\",   \"m1\",   \"d4\",   \"o10\",  \"m2\",   \"d5\",   \"o11\",  \"m2\",   \"d5\",   \"o12\",  \"m2\",   \"d5\",   \"o13\",  \"m2\",   \"d5\",   \"o14\",  \"m3\",   \"d5\",   \"o15\",  \"m3\",   \"d5\",   \"o16\",  \"m3\",   \"d5\",   \"o17\",  \"m3\",   \"d5\" ), 17, 3, byrow = TRUE)) names(pedigree) <- c(\"id\", \"dam\", \"sire\") for (x in 1:3) pedigree[, x] <- as.factor(pedigree[, x])  ## some sample genotypes, very simple, two markers with He = 0.5 sampleGenotypes <- as.data.frame(matrix(c(   1, 2, 1, 2, 2, 1, 2, 1 ), 2, 4, byrow = TRUE)) ## locus names names(sampleGenotypes) <- c(\"loc1a\", \"loc1b\", \"loc2a\", \"loc2b\")  ## simulate some genotypes micro_sim(pedigree = pedigree, genotypesSample = sampleGenotypes) #> $trueGenotypes #>     loc1b loc1b_b loc2b loc2b_b #> m1      1       2     2       2 #> m2      1       2     2       2 #> m3      1       1     1       2 #> d4      2       1     1       1 #> d5      1       1     1       1 #> o6      1       2     2       1 #> o7      2       1     2       1 #> o8      2       2     2       1 #> o9      1       1     2       1 #> o10     2       1     2       1 #> o11     2       1     2       1 #> o12     2       1     2       1 #> o13     2       1     2       1 #> o14     1       1     2       1 #> o15     1       1     2       1 #> o16     1       1     2       1 #> o17     1       1     1       1 #>  #> $observedGenotypes #>     loc1b loc1b_b loc2b loc2b_b #> m1      1       2     2       2 #> m2      1       2     2       2 #> m3      1       1     1       2 #> d4      2       1     1       1 #> d5      1       1     1       1 #> o6      1       2     2       1 #> o7      2       1     2       1 #> o8      2       2     2       1 #> o9      1       1     2       1 #> o10     2       1     2       1 #> o11     2       1     2       1 #> o12     2       1     2       1 #> o13     2       1     2       1 #> o14     1       1     2       1 #> o15     1       1     2       1 #> o16     1       1     2       1 #> o17     1       1     1       1 #>"},{"path":"/reference/ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates a range of statistics of pedigrees — ped_stats","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"Statistics hopefully useful describing pedigrees used quantitative genetic analyses natural populations.  module useful cohort affinities individuals can provided.  outputs produced numerical form well graphical summaries.","code":""},{"path":"/reference/ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"","code":"ped_stats(   Ped,   cohorts = NULL,   dat = NULL,   retain = \"informative\",   includeA = TRUE,   lowMem = FALSE )"},{"path":"/reference/ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"Ped pedigree cohorts (Optional) Cohort affinities members pedigree dat (Optional) Available data based upon pedigree can pruned just informative individuals retain default value ('informative') results pedigree pruned indivduals records contribute estimation quantitative genetic parameters respect available data specified dat.  Otherwise, specifying value 'ancestors' result inclusion ancestors phenotyped individuals. includeA TRUE, additive genetic relatedness matrix returned. lowMem TRUE, stats based calculation performed.","code":""},{"path":"/reference/ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"totalMaternities Total number maternities defined pedigree. totalPaternities Total number paternities defined pedigree. totalFullSibs Total number pair-wise full sib relationships defined pedigree. totalMaternalSibs Total number pair-wise maternal sib relationships defined pedigree.  get number maternal half sibs, subtract totalFullSibs. totalPaternalSibs Total number pair-wise paternal sib relationships defined pedigree.  get number paternal half sibs, subtract totalFullSibs. totalMaternalGrandmothers Total number maternal grandmothers defined pedigree. totalMaternalGrandfathers Total number maternal grandfathers defined pedigree. totalPaternalGrandmothers Total number paternal grandmothers defined pedigree. totalPaternalGrandfathers Total number paternal grandfathers defined pedigree. pedigreeDepth pedidigree pedth, .e. maximum number ancestral generations, individual. inbreedingCoefficients Individual inbreeding coefficients maternalSibships Sibship size individual appearing dam column pedigree. paternalSibships Sibship size individual appearing sire column pedigree. cumulativeRelatedness Proportion pair-wise relatedness values less values ranging 0 1. relatednessCategories Discretized distribution relatedness. analyzedPedigree Returns pedigree. sampleSizesByCohort (Optional) Numer individuals belonging cohort. maternitiesByCohort (Optional) Number assigned maternities offspring cohort. paternitiesByCohort (Optional) Number assigned paternities offspring cohort. fullSibsByCohort (Optional) Number pair-wise full sib relationships cohort - note sum need equal totalFullSibs pedigrees long-lived organisms. maternalSibsByCohort (Optional) Number pair-wise maternal sib relationships cohort - note sum need equal totalMaternalSibs pedigrees long-lived organisms. paternalSibsByCohort (Optional) Number pair-wise paternal sib relationships cohort - note sum need equal totalPaternalSibs pedigrees long-lived organisms. maternalGrandmothersByCohort (Optional) Numbers maternal grandmother assignments offspring cohort. maternalGrandfathersByCohort (Optional) Numbers maternal grandmother assignments offspring cohort. paternalGrandmothersByCohort (Optional) Numbers paternal grandfather assignments offspring cohort. paternalGrandfathersByCohort (Optional) Numbers paternal grandfather assignments offspring cohort. cumulativePedigreeDepth (Optional) Distributions pedigree depth cohort. meanRelatednessAmongCohorts (Optional) Mean relatedness among cohorts. cohorts (Optional) Returns cohort designations. Graphical summaries number summary statistics printed console graphicalReports=='y'.","code":""},{"path":"/reference/ped_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates a range of statistics of pedigrees — ped_stats","text":"","code":"if (FALSE) { # \\dontrun{  data(gryphons) pedigree <- gryphons[, 1:3]  gryphons_ped_stats <- ped_stats(pedigree,   cohorts = gryphons$cohort)  gryphons_ped_stats$totalMaternities gryphons_ped_stats$paternitiesByCohort  summary(gryphons_ped_stats)  plot(gryphons_ped_stats) } # }"},{"path":"/reference/pedantics-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions from package pedantics. — pedantics-defunct","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"functions listed transferred pedantics pedtricks short-term plan implement since relying C code need heavily updated.","code":""},{"path":"/reference/pedantics-defunct.html","id":"rpederr","dir":"Reference","previous_headings":"","what":"rpederr","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"Permutes pedigree create plausible complete pedigree","code":""},{"path":"/reference/pedantics-defunct.html","id":"fpederr","dir":"Reference","previous_headings":"","what":"fpederr","title":"Defunct functions from package pedantics. — pedantics-defunct","text":"Simulates pedigree errors missing data complete pedigree.","code":""},{"path":"/reference/pedantics-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions from package pedantics. — makemakePedigreeFactor","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"functions listed deprecated available backward compatibility . might defunct future version possible, alternative functions similar functionality also mentioned.","code":""},{"path":"/reference/pedantics-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"","code":"makemakePedigreeFactor(id, sire, dam, key = NULL)  makePedigreeNumeric(id, sire, dam, missingVal = NA)  drawPedigree(   Ped,   cohorts = NULL,   sex = NULL,   dat = NULL,   dots = \"n\",   plotfull = \"y\",   writeCohortLabels = \"n\",   links = \"all\",   sexInd = c(0, 1),   dotSize = 0.001,   dataDots = \"n\",   dataDots.cex = 2,   cohortLabs.cex = 1,   retain = \"informative\",   focal = NULL,   sexColours = c(\"red\", \"blue\"),   ... )  fixPedigree(Ped, dat = NULL)  genomesim(   pedigree,   founders = NULL,   positions = NULL,   initHe = NULL,   mutationType = NULL,   mutationRate = NULL,   phenotyped = NULL,   founderHaplotypes = NULL,   genotyped = NULL,   returnG = \"n\",   initFreqs = NULL )  microsim(   pedigree,   genFreqs = NULL,   genotypesSample = NULL,   knownGenotypes = NULL,   records = NULL,   eRate1 = 0,   eRate2 = 0,   eRate3 = 0 )  pedigreeStat()  pedStatSummary()  phensim(   pedigree,   traits = 1,   randomA = NULL,   randomE = NULL,   parentalA = NULL,   parentalE = NULL,   sampled = NULL,   records = NULL,   returnAllEffects = FALSE )"},{"path":"/reference/pedantics-deprecated.html","id":"makepedigreefactor","dir":"Reference","previous_headings":"","what":"makePedigreeFactor","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function now special case convert_ped function type factor","code":""},{"path":"/reference/pedantics-deprecated.html","id":"makepedigreenumeric","dir":"Reference","previous_headings":"","what":"makePedigreeNumeric","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function now special case convert_ped function type numeric","code":""},{"path":"/reference/pedantics-deprecated.html","id":"drawpedigree","dir":"Reference","previous_headings":"","what":"drawPedigree","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment, soon replace \"ggpedigree\" function","code":""},{"path":"/reference/pedantics-deprecated.html","id":"fixpedigree","dir":"Reference","previous_headings":"","what":"fixPedigree","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"/reference/pedantics-deprecated.html","id":"genomesim","dir":"Reference","previous_headings":"","what":"genomesim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"/reference/pedantics-deprecated.html","id":"microsim","dir":"Reference","previous_headings":"","what":"microsim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"/reference/pedantics-deprecated.html","id":"pedigreestats","dir":"Reference","previous_headings":"","what":"pedigreeStats","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function simplified functionality still available via ped_stats summary plot methods","code":""},{"path":"/reference/pedantics-deprecated.html","id":"pedstatsummary","dir":"Reference","previous_headings":"","what":"pedStatSummary","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function simplified functionality still available via ped_stats summary plot methods","code":""},{"path":"/reference/pedantics-deprecated.html","id":"phensim","dir":"Reference","previous_headings":"","what":"phensim","title":"Deprecated functions from package pedantics. — makemakePedigreeFactor","text":"function just renamed changes moment","code":""},{"path":"/reference/pedtricks-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pedtricks: Functions to visualize, summarize and simulate data from pedigrees — pedtricks-package","title":"pedtricks: Functions to visualize, summarize and simulate data from pedigrees — pedtricks-package","text":"Functions sensitivity power analysis, calculating statistics describing pedigrees wild populations, visualizing pedigrees.","code":""},{"path":"/reference/pedtricks-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pedtricks: Functions to visualize, summarize and simulate data from pedigrees — pedtricks-package","text":"pedigreeStats() pedStatSummary() replaced ped_stats() summary() plot() methods simplify workflow allow get plots without running statistics time makePedigreeFactor() makePedigreeNumeric() combined convert_ped() convert pedigree numeric factor fixPedigree() now fix_ped() genomesim(), microsim() phensim() renamed genome_sim(), micro_sim() phen_sim() backward compatibility code using pedantics older names still usable recommended.","code":""},{"path":"/reference/pedtricks-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pedtricks: Functions to visualize, summarize and simulate data from pedigrees — pedtricks-package","text":"Maintainer: Julien Martin julien.martin@uottawa.ca (ORCID) Authors: Matthew Wolak mew0099@auburn.edu (ORCID) Susan Johnston Susan.Johnston@ed.ac.uk (ORCID) Michael Morrissey michael.morrissey@st-andrews.ac.uk (ORCID)","code":""},{"path":"/reference/phen_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to simulated phenotypic data — phen_sim","title":"A function to simulated phenotypic data — phen_sim","text":"Simulates phenotypic data across arbitrary pedigrees.   phen_sim simulate direct, maternal paternal genetica environmental effects arbitrary number traits arbitrary patterns missing data.","code":""},{"path":"/reference/phen_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to simulated phenotypic data — phen_sim","text":"","code":"phen_sim(   pedigree,   traits = 1,   randomA = NULL,   randomE = NULL,   parentalA = NULL,   parentalE = NULL,   sampled = NULL,   records = NULL,   returnAllEffects = FALSE )"},{"path":"/reference/phen_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to simulated phenotypic data — phen_sim","text":"pedigree pedigree traits number traits data simulated. randomA additive genetic covariance matrix, dimensions multiple traits - see details randomE additive environmental covariance matrix, dimensions multiple traits - see details parentalA vector indicating effects randomA () treat parental effects parentalE vector indicating effects randomE () treat parental effects sampled vector indicating individuals sampled records single value, array matrix specifying data record availability - see details returnAllEffects TRUE individual breeding values environmental effects returned","code":""},{"path":"/reference/phen_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to simulated phenotypic data — phen_sim","text":"phenotypes dataframe containing phenotypes indivduals specified records. allEffects (optional) dataframe direct indirect genetic environmental effects.","code":""},{"path":"/reference/phen_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to simulated phenotypic data — phen_sim","text":"randomA randomE square matrices dimension equal sum number direct indirect effects.  must multiple number traits, .e. indirect effect simulated one multiple traits, traits indirect effect included (co)variances zero. parentalA parentalE optional vectors characters indicating trait positions randomA randomE treated indirect effects, effects treat maternal paternal.  Valid values 'd', 'm', 'p', direct, maternal indirect paternal indirect effects, respectively. records can specified either (1) asingle value applied individuals traits, (2) vector length number traits, representing trait-specific rates applied uniformly individuals, (3) data frames rows individual columns trait.  third option, observed patterns data availability can simulated supplying 0s 1s missing available individual genotypes, respectively.","code":""},{"path":[]},{"path":"/reference/phen_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to simulated phenotypic data — phen_sim","text":"","code":"## make up a pedigree id<-   c(\"a1\",\"a2\",\"a3\",\"a4\",\"a5\",\"a6\",\"a7\",\"a8\",\"a9\") dam<-  c(NA,NA,NA,\"a1\",\"a1\",\"a1\",\"a4\",\"a4\",\"a4\") sire<- c(NA,NA,NA,\"a2\",\"a2\",\"a2\",\"a5\",\"a6\",\"a6\") pedigree<-as.data.frame(cbind(id,sire,dam))  traits<-2 ## no correlations randomA<-diag(4) randomE<-diag(4) parentalA<-c(\"d\",\"d\",\"m\",\"m\") parentalE<-c(\"d\",\"d\",\"m\",\"m\")  ## generate phenoypic data based on this architecture  phen_sim(pedigree=pedigree,traits=2,randomA=randomA,randomE=randomE,           parentalA=parentalA,parentalE=parentalE) #> Simulating breeding values and environmental effects...done.  #> Calculating phenotypes...done.  #> $phenotypes #>    id    trait_1    trait_2 #> a1 a1 -2.1543727  1.0496300 #> a2 a2  0.5121640 -0.1652518 #> a3 a3 -0.9382492  0.1022400 #> a4 a4  0.6400959 -0.2518556 #> a5 a5  0.3645492 -0.7251698 #> a6 a6  2.9096596  2.6040775 #> a7 a7 -0.7399189  1.3612447 #> a8 a8  0.4500141 -1.0180013 #> a9 a9  2.7681576  0.6924113 #>   ## let's do it again but see how the phenotypes were composed  phen_sim(pedigree=pedigree,traits=2,randomA=randomA,randomE=randomE,           parentalA=parentalA,parentalE=parentalE,returnAllEffects=TRUE) #> Simulating breeding values and environmental effects...done.  #> Calculating phenotypes...done.  #> $phenotypes #>    id     trait_1     trait_2 #> a1 a1 -0.58712126  1.60206528 #> a2 a2 -4.37478225  1.21041313 #> a3 a3  0.56852801  0.73824510 #> a4 a4 -0.33852939  0.38431169 #> a5 a5  0.01098483 -0.08103798 #> a6 a6 -0.52486905  0.93101551 #> a7 a7  1.01660687 -1.61843254 #> a8 a8  0.05202055  1.18594418 #> a9 a9 -1.08385598  0.11114675 #>  #> $allEffects #>    id sire  dam       a_tr1    a_tr2   bv_m_tr1    bv_m_tr2       e_tr1 #> a1 a1 <NA> <NA> -0.30562067 2.211769 -1.0416684 -1.14652385  0.54214155 #> a2 a2 <NA> <NA> -1.67532730 1.525939  0.5541855  1.99311026 -1.45229977 #> a3 a3 <NA> <NA> -0.15412074 2.564408  1.0619991  1.14269488  0.04020439 #> a4 a4   a2   a1 -0.19579992 1.588132 -0.8258750  0.01395996  0.34042449 #> a5 a5   a2   a1  0.25671344 1.962894  0.0224838  1.22848111  0.23742535 #> a6 a6   a2   a1 -0.11276845 2.301668 -0.5473590  1.38528464  0.07105336 #> a7 a7   a5   a4 -0.01964701 1.583071 -2.1317596  0.66752659  1.15337579 #> a8 a8   a6   a4 -0.93104728 1.497175 -2.1458410  2.57270010  1.10018974 #> a9 a9   a6   a4 -0.96986001 1.704032 -0.1305747 -0.19876614  0.00312594 #>          e_tr2    e_m_tr1     e_m_tr2 P_bv_m_tr1  P_bv_m_tr2  P_e_m_tr1 #> a1  0.07510590  0.5585144  0.41540640  -1.113417 -0.20475662  0.2897745 #> a2  0.94120612 -0.3389359 -0.07557425  -1.396835  0.17658945  0.1496794 #> a3  0.12430107 -0.9984326  1.23339006   1.588785  0.15168817 -0.9063402 #> a4 -0.47270248  0.7087531 -1.52895871  -1.041668 -1.14652385  0.5585144 #> a5 -1.31281425  0.7470286 -1.56251843  -1.041668 -1.14652385  0.5585144 #> a6 -0.63953477 -0.8451957  0.67524470  -1.041668 -1.14652385  0.5585144 #> a7 -1.68650474 -0.9028149  1.31763370  -0.825875  0.01395996  0.7087531 #> a8  1.20376784 -1.4312708  1.38291086  -0.825875  0.01395996  0.7087531 #> a9 -0.07788682  0.4414282  0.12892290  -0.825875  0.01395996  0.7087531 #>     P_e_m_tr2    Phen_tr1    Phen_tr2 #> a1 -0.4800535 -0.58712126  1.60206528 #> a2 -1.4333211 -4.37478225  1.21041313 #> a3 -2.1021525  0.56852801  0.73824510 #> a4  0.4154064 -0.33852939  0.38431169 #> a5  0.4154064  0.01098483 -0.08103798 #> a6  0.4154064 -0.52486905  0.93101551 #> a7 -1.5289587  1.01660687 -1.61843254 #> a8 -1.5289587  0.05202055  1.18594418 #> a9 -1.5289587 -1.08385598  0.11114675 #>"},{"path":"/reference/plot.ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from ped_stats — plot.ped_stats","title":"Plot output from ped_stats — plot.ped_stats","text":"Generates manageable summary pedigree-wide statistics reported ped_stats, either single pedigree comparison pedigrees","code":""},{"path":"/reference/plot.ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from ped_stats — plot.ped_stats","text":"","code":"# S3 method for class 'ped_stats' plot(x, lowMem = FALSE, grContrast = FALSE, ...)"},{"path":"/reference/plot.ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from ped_stats — plot.ped_stats","text":"x object class ped_stats generated ped_stats lowMem TRUE, stats based calculation performed. grContrast TRUE, uglier shades red blue used denote male female statistics graphical reports, colours provide better contrast greyscale. ... extra arguments","code":""},{"path":"/reference/plot.ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output from ped_stats — plot.ped_stats","text":"Returns table numbers records, maternities, paternities, pairwise sibship relationships, numbers different classes grand-parental relationships, pedigree depth, number founders, mean subship sizes, simple statistics numbers inbred non-inbred indivdiuals, proportions pairwise relationship coefficients equal greater several thresholds.","code":""},{"path":"/reference/summary.ped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-processes output from ped_stats — summary.ped_stats","title":"Post-processes output from ped_stats — summary.ped_stats","text":"Generates manageable summary pedigree-wide statistics reported ped_stats, either single pedigree comparison pedigrees","code":""},{"path":"/reference/summary.ped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-processes output from ped_stats — summary.ped_stats","text":"","code":"# S3 method for class 'ped_stats' summary(object, ...)"},{"path":"/reference/summary.ped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-processes output from ped_stats — summary.ped_stats","text":"object object class ped_stats generated ped_stats ... extra arguments","code":""},{"path":"/reference/summary.ped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-processes output from ped_stats — summary.ped_stats","text":"Returns table numbers records, maternities, paternities, pairwise sibship relationships, numbers different classes grand-parental relationships, pedigree depth, number founders, mean subship sizes, simple statistics numbers inbred non-inbred indivdiuals, proportions pairwise relationship coefficients equal greater several thresholds.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW","title":"pedtricks 0.1.0","text":"Initial transfer update CRAN archived pedantics package new name pedtricks.","code":""},{"path":"/news/index.html","id":"deprecated-from-pedantics-0-1-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED from pedantics","title":"pedtricks 0.1.0","text":"rpederrand fpederr implemented","code":""},{"path":[]}]
